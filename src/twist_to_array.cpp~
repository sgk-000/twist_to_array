#include <ros/ros.h>
#include <std_msgs/Float32MultiArray.h>
#include <geometry_msgs/Twist.h>

std_msgs::Float32MultiArray output_;

void TwistCallback_(const geometry_msgs::Twist::ConstPtr twist_data) {
    output_.data.resize(3);
    output_.data[0] = twist_data->linear.x;
    output_.data[1] = twist_data->linear.y;
    output_.data[2] = twist_data->angular.z;
}

int main(int argc, char **argv)
{
    ros::init(argc, argv, "twist_to_array");
    ros::NodeHandle nh;
    ros::Publisher array_pub = nh.advertise<std_msgs::Float32MultiArray>("vel_array", 10);
    while(ros::ok()){
        ros::Subscriber twist_sub = nh.subscribe("cmd_vel", 1, TwistCallback_);
        array_pub.publish(output_);
        ros::spinOnce();
    }
    return 0;
}
